<?php

/**
 * ProjectsRoles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProjectsRoles extends BaseProjectsRoles
{
  public static function getNotAllowedProjectsByModule($module,$users_id,$check_insert=false) 
  {        
    $q = Doctrine_Core::getTable('ProjectsRoles')
                        ->createQuery('pr')
                        ->leftJoin('pr.UsersGroups ug')
                        ->addSelect('group_concat(pr.projects_id) as projects_list')
                        ->addWhere('pr.users_id=?',$users_id);
                                                
    switch($module)
    {
      case 'tasks': 
           if($check_insert)
           {
             $q->addWhere("ug.allow_manage_tasks not in ('full_access','manage_own_lnly') or (ug.allow_manage_tasks='custom' and find_in_set('create',tasks_custom_access)=0) ");
           }
           else
           { 
             $q->addWhere('length(ug.allow_manage_tasks)=0');
           } 
        break;
      case 'tickets': 
           if($check_insert)
           {
             $q->addWhere("ug.allow_manage_tickets not in ('full_access','manage_own_lnly') or (ug.allow_manage_tickets='custom' and find_in_set('create',tasks_custom_access)=0) ");
           }
           else
           { 
             $q->addWhere('length(ug.allow_manage_tickets)=0');
           }
        break;
      case 'discussions': 
           if($check_insert)
           {
             $q->addWhere("ug.allow_manage_discussions not in ('full_access','manage_own_lnly') or (ug.allow_manage_discussions='custom' and find_in_set('create',tasks_custom_access)=0) ");
           }
           else
           { 
             $q->addWhere('length(ug.allow_manage_discussions)=0');
           }
        break;
    }
            
    if($projects = $q->groupBy('pr.users_id')->fetchOne())
    {
      return explode(',',$projects->getProjectsList());
    }
    else
    {
      return array();
    }
  }

  public static function setRoles($project_roles,$projects_id)
  {        
    foreach($project_roles as $users_id=>$users_groups_id)
    {
      if($users_groups_id>0)
      {
        $r = new ProjectsRoles;
        $r->setProjectsId($projects_id);
        $r->setUsersId($users_id);
        $r->setUsersGroupsId($users_groups_id);
        $r->save();
      }      
    }
  }
  
  public static function getRole($projects_id, $users_id)
  {
    $r = Doctrine_Core::getTable('ProjectsRoles')
          ->createQuery()
          ->addWhere('projects_id=?',$projects_id)          
          ->addWhere('users_id=?',$users_id)
          ->fetchOne();
    if($r)
    {
      return $r->getUsersGroupsId();
    }
    else
    {
      return '';
    }
  }  
  
  public static function getIdListByAccess($access)
  {
    $q = Doctrine_Core::getTable('UsersGroups')
      ->createQuery('a')
      ->addWhere('group_type=?','project_role');
      
    switch($access)
    {
      case 'tasks':        
        $q->addWhere('length(allow_manage_tasks)>0');
        break;       
      case 'tasks_insert': $q->addWhere("allow_manage_tasks in ('full_access','manage_own_lnly') or (allow_manage_tasks='custom' and find_in_set('create',tasks_custom_access)) ");
        break; 
      case 'tasks_comments_insert': $q->addWhere("tasks_comments_access in ('full_access','manage_own_lnly','insert_only')");
        break;      
      case 'tickets': $q->addWhere('length(allow_manage_tickets)>0');
        break;
      case 'tickets_insert': $q->addWhere("allow_manage_tickets in ('full_access','manage_own_lnly') or (allow_manage_tickets='custom' and find_in_set('create',tickets_custom_access)) ");
        break;      
      case 'discussions': $q->addWhere('length(allow_manage_discussions)>0');      
        break;
      case 'discussions_insert': $q->addWhere("allow_manage_discussions in ('full_access','manage_own_lnly') or (allow_manage_discussions='custom' and find_in_set('create',discussions_custom_access)) ");
        break;      
    }
    
    $l = array();
    foreach($q->fetchArray() as $v)
    {
      $l[] = $v['id'];
    }
    
    return $l;
  }
}