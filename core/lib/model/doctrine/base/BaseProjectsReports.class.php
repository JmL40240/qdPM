<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectsReports', 'doctrine');

/**
 * BaseProjectsReports
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $users_id
 * @property string $name
 * @property integer $display_on_home
 * @property string $projects_id
 * @property string $projects_type_id
 * @property string $projects_groups_id
 * @property string $projects_status_id
 * @property string $projects_priority_id
 * @property string $in_team
 * @property integer $sort_order
 * @property integer $display_in_menu
 * @property integer $visible_on_home
 * @property string $report_type
 * @property integer $is_default
 * @property string $extra_fields
 * @property string $listing_order
 * @property string $users_groups_id
 * @property integer $display_only_assigned
 * @property integer $is_mandatory
 * @property Users $Users
 * 
 * @method integer         getId()                    Returns the current record's "id" value
 * @method integer         getUsersId()               Returns the current record's "users_id" value
 * @method string          getName()                  Returns the current record's "name" value
 * @method integer         getDisplayOnHome()         Returns the current record's "display_on_home" value
 * @method string          getProjectsId()            Returns the current record's "projects_id" value
 * @method string          getProjectsTypeId()        Returns the current record's "projects_type_id" value
 * @method string          getProjectsGroupsId()      Returns the current record's "projects_groups_id" value
 * @method string          getProjectsStatusId()      Returns the current record's "projects_status_id" value
 * @method string          getProjectsPriorityId()    Returns the current record's "projects_priority_id" value
 * @method string          getInTeam()                Returns the current record's "in_team" value
 * @method integer         getSortOrder()             Returns the current record's "sort_order" value
 * @method integer         getDisplayInMenu()         Returns the current record's "display_in_menu" value
 * @method integer         getVisibleOnHome()         Returns the current record's "visible_on_home" value
 * @method string          getReportType()            Returns the current record's "report_type" value
 * @method integer         getIsDefault()             Returns the current record's "is_default" value
 * @method string          getExtraFields()           Returns the current record's "extra_fields" value
 * @method string          getListingOrder()          Returns the current record's "listing_order" value
 * @method string          getUsersGroupsId()         Returns the current record's "users_groups_id" value
 * @method integer         getDisplayOnlyAssigned()   Returns the current record's "display_only_assigned" value
 * @method integer         getIsMandatory()           Returns the current record's "is_mandatory" value
 * @method Users           getUsers()                 Returns the current record's "Users" value
 * @method ProjectsReports setId()                    Sets the current record's "id" value
 * @method ProjectsReports setUsersId()               Sets the current record's "users_id" value
 * @method ProjectsReports setName()                  Sets the current record's "name" value
 * @method ProjectsReports setDisplayOnHome()         Sets the current record's "display_on_home" value
 * @method ProjectsReports setProjectsId()            Sets the current record's "projects_id" value
 * @method ProjectsReports setProjectsTypeId()        Sets the current record's "projects_type_id" value
 * @method ProjectsReports setProjectsGroupsId()      Sets the current record's "projects_groups_id" value
 * @method ProjectsReports setProjectsStatusId()      Sets the current record's "projects_status_id" value
 * @method ProjectsReports setProjectsPriorityId()    Sets the current record's "projects_priority_id" value
 * @method ProjectsReports setInTeam()                Sets the current record's "in_team" value
 * @method ProjectsReports setSortOrder()             Sets the current record's "sort_order" value
 * @method ProjectsReports setDisplayInMenu()         Sets the current record's "display_in_menu" value
 * @method ProjectsReports setVisibleOnHome()         Sets the current record's "visible_on_home" value
 * @method ProjectsReports setReportType()            Sets the current record's "report_type" value
 * @method ProjectsReports setIsDefault()             Sets the current record's "is_default" value
 * @method ProjectsReports setExtraFields()           Sets the current record's "extra_fields" value
 * @method ProjectsReports setListingOrder()          Sets the current record's "listing_order" value
 * @method ProjectsReports setUsersGroupsId()         Sets the current record's "users_groups_id" value
 * @method ProjectsReports setDisplayOnlyAssigned()   Sets the current record's "display_only_assigned" value
 * @method ProjectsReports setIsMandatory()           Sets the current record's "is_mandatory" value
 * @method ProjectsReports setUsers()                 Sets the current record's "Users" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectsReports extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projects_reports');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('users_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('display_on_home', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('projects_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('projects_type_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('projects_groups_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('projects_status_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('projects_priority_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('in_team', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('sort_order', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('display_in_menu', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('visible_on_home', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('report_type', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('is_default', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('extra_fields', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('listing_order', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('users_groups_id', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('display_only_assigned', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('is_mandatory', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'users_id',
             'foreign' => 'id'));
    }
}