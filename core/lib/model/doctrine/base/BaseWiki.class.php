<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Wiki', 'doctrine');

/**
 * BaseWiki
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $projects_id
 * @property string $name
 * @property string $description
 * @property integer $users_id
 * @property timestamp $created_at
 * @property Users $Users
 * @property Projects $Projects
 * @property Doctrine_Collection $WikiHistory
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method integer             getProjectsId()  Returns the current record's "projects_id" value
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method integer             getUsersId()     Returns the current record's "users_id" value
 * @method timestamp           getCreatedAt()   Returns the current record's "created_at" value
 * @method Users               getUsers()       Returns the current record's "Users" value
 * @method Projects            getProjects()    Returns the current record's "Projects" value
 * @method Doctrine_Collection getWikiHistory() Returns the current record's "WikiHistory" collection
 * @method Wiki                setId()          Sets the current record's "id" value
 * @method Wiki                setProjectsId()  Sets the current record's "projects_id" value
 * @method Wiki                setName()        Sets the current record's "name" value
 * @method Wiki                setDescription() Sets the current record's "description" value
 * @method Wiki                setUsersId()     Sets the current record's "users_id" value
 * @method Wiki                setCreatedAt()   Sets the current record's "created_at" value
 * @method Wiki                setUsers()       Sets the current record's "Users" value
 * @method Wiki                setProjects()    Sets the current record's "Projects" value
 * @method Wiki                setWikiHistory() Sets the current record's "WikiHistory" collection
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseWiki extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('wiki');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('projects_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('users_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'users_id',
             'foreign' => 'id'));

        $this->hasOne('Projects', array(
             'local' => 'projects_id',
             'foreign' => 'id'));

        $this->hasMany('WikiHistory', array(
             'local' => 'id',
             'foreign' => 'wiki_id'));
    }
}