<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ProjectsComments', 'doctrine');

/**
 * BaseProjectsComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $projects_id
 * @property integer $created_by
 * @property string $description
 * @property timestamp $created_at
 * @property integer $projects_status_id
 * @property integer $in_trash
 * @property integer $in_trash_date
 * @property integer $projects_priority_id
 * @property integer $projects_types_id
 * @property integer $projects_groups_id
 * @property Projects $Projects
 * @property Users $Users
 * @property ProjectsStatus $ProjectsStatus
 * @property ProjectsPriority $ProjectsPriority
 * @property ProjectsTypes $ProjectsTypes
 * @property ProjectsGroups $ProjectsGroups
 * 
 * @method integer          getId()                   Returns the current record's "id" value
 * @method integer          getProjectsId()           Returns the current record's "projects_id" value
 * @method integer          getCreatedBy()            Returns the current record's "created_by" value
 * @method string           getDescription()          Returns the current record's "description" value
 * @method timestamp        getCreatedAt()            Returns the current record's "created_at" value
 * @method integer          getProjectsStatusId()     Returns the current record's "projects_status_id" value
 * @method integer          getInTrash()              Returns the current record's "in_trash" value
 * @method integer          getInTrashDate()          Returns the current record's "in_trash_date" value
 * @method integer          getProjectsPriorityId()   Returns the current record's "projects_priority_id" value
 * @method integer          getProjectsTypesId()      Returns the current record's "projects_types_id" value
 * @method integer          getProjectsGroupsId()     Returns the current record's "projects_groups_id" value
 * @method Projects         getProjects()             Returns the current record's "Projects" value
 * @method Users            getUsers()                Returns the current record's "Users" value
 * @method ProjectsStatus   getProjectsStatus()       Returns the current record's "ProjectsStatus" value
 * @method ProjectsPriority getProjectsPriority()     Returns the current record's "ProjectsPriority" value
 * @method ProjectsTypes    getProjectsTypes()        Returns the current record's "ProjectsTypes" value
 * @method ProjectsGroups   getProjectsGroups()       Returns the current record's "ProjectsGroups" value
 * @method ProjectsComments setId()                   Sets the current record's "id" value
 * @method ProjectsComments setProjectsId()           Sets the current record's "projects_id" value
 * @method ProjectsComments setCreatedBy()            Sets the current record's "created_by" value
 * @method ProjectsComments setDescription()          Sets the current record's "description" value
 * @method ProjectsComments setCreatedAt()            Sets the current record's "created_at" value
 * @method ProjectsComments setProjectsStatusId()     Sets the current record's "projects_status_id" value
 * @method ProjectsComments setInTrash()              Sets the current record's "in_trash" value
 * @method ProjectsComments setInTrashDate()          Sets the current record's "in_trash_date" value
 * @method ProjectsComments setProjectsPriorityId()   Sets the current record's "projects_priority_id" value
 * @method ProjectsComments setProjectsTypesId()      Sets the current record's "projects_types_id" value
 * @method ProjectsComments setProjectsGroupsId()     Sets the current record's "projects_groups_id" value
 * @method ProjectsComments setProjects()             Sets the current record's "Projects" value
 * @method ProjectsComments setUsers()                Sets the current record's "Users" value
 * @method ProjectsComments setProjectsStatus()       Sets the current record's "ProjectsStatus" value
 * @method ProjectsComments setProjectsPriority()     Sets the current record's "ProjectsPriority" value
 * @method ProjectsComments setProjectsTypes()        Sets the current record's "ProjectsTypes" value
 * @method ProjectsComments setProjectsGroups()       Sets the current record's "ProjectsGroups" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjectsComments extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projects_comments');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('projects_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('projects_status_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('in_trash', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('in_trash_date', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('projects_priority_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('projects_types_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('projects_groups_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projects', array(
             'local' => 'projects_id',
             'foreign' => 'id'));

        $this->hasOne('Users', array(
             'local' => 'created_by',
             'foreign' => 'id'));

        $this->hasOne('ProjectsStatus', array(
             'local' => 'projects_status_id',
             'foreign' => 'id'));

        $this->hasOne('ProjectsPriority', array(
             'local' => 'projects_priority_id',
             'foreign' => 'id'));

        $this->hasOne('ProjectsTypes', array(
             'local' => 'projects_types_id',
             'foreign' => 'id'));

        $this->hasOne('ProjectsGroups', array(
             'local' => 'projects_groups_id',
             'foreign' => 'id'));
    }
}