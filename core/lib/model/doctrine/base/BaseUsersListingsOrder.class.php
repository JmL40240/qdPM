<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UsersListingsOrder', 'doctrine');

/**
 * BaseUsersListingsOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $module
 * @property string $order_type
 * @property integer $users_id
 * @property integer $projects_id
 * @property string $collapsed_tasks
 * @property Users $Users
 * @property Projects $Projects
 * 
 * @method integer            getId()              Returns the current record's "id" value
 * @method string             getModule()          Returns the current record's "module" value
 * @method string             getOrderType()       Returns the current record's "order_type" value
 * @method integer            getUsersId()         Returns the current record's "users_id" value
 * @method integer            getProjectsId()      Returns the current record's "projects_id" value
 * @method string             getCollapsedTasks()  Returns the current record's "collapsed_tasks" value
 * @method Users              getUsers()           Returns the current record's "Users" value
 * @method Projects           getProjects()        Returns the current record's "Projects" value
 * @method UsersListingsOrder setId()              Sets the current record's "id" value
 * @method UsersListingsOrder setModule()          Sets the current record's "module" value
 * @method UsersListingsOrder setOrderType()       Sets the current record's "order_type" value
 * @method UsersListingsOrder setUsersId()         Sets the current record's "users_id" value
 * @method UsersListingsOrder setProjectsId()      Sets the current record's "projects_id" value
 * @method UsersListingsOrder setCollapsedTasks()  Sets the current record's "collapsed_tasks" value
 * @method UsersListingsOrder setUsers()           Sets the current record's "Users" value
 * @method UsersListingsOrder setProjects()        Sets the current record's "Projects" value
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsersListingsOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('users_listings_order');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('module', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('order_type', 'string', 64, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 64,
             ));
        $this->hasColumn('users_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('projects_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('collapsed_tasks', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users', array(
             'local' => 'users_id',
             'foreign' => 'id'));

        $this->hasOne('Projects', array(
             'local' => 'projects_id',
             'foreign' => 'id'));
    }
}