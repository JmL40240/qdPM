<?php

/**
 * TicketsComments
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sf_sandbox
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class TicketsComments extends BaseTicketsComments
{  
  public static function sendPublicNotification($c,$comment,$sf_user)
  {
    $tickets =$comment->getTickets();
    $departments = Doctrine_Core::getTable('Departments')->find($tickets->getDepartmentsId());
     
    $to = array($tickets->getUserEmail()=>$tickets->getUserName());
    
    if($departments->getUseForEmailTickets()==1 and strlen($departments->getImapLogin())>0)
    {
      $from = array($departments->getImapLogin()=>$departments->getName());
    }
    else
    {
      $from = array($departments->getUsers()->getEmail()=>$departments->getUsers()->getName());
    }
                             
    $subject = '[ID:' . $tickets->getId() . ']: ' . $comment->getTickets()->getName();
    
    $body  = 'Hello [USERNAME],<br><br>Your ticket [ID] has been updated:<br>================================================================<br>[DESCRIPTION]';
            
    if(strlen(trim(strip_tags($departments->getTicketCommentMessage())))>0)
    {
      $body = $departments->getTicketCommentMessage();
    }
    
    $body = str_replace('[USERNAME]',$tickets->getUserName(),$body);
    $body = str_replace('[ID]',$tickets->getId(),$body);
    $body = str_replace('[DESCRIPTION]',$comment->getDescription() . ($comment->getTicketsStatusId()>0 ? '<br><br>' . t::__('Status') . ': ' . $comment->getTicketsStatus()->getName() . '<br>':''),$body);
    
    
    $attachments_array = array();
    
    $attachments = Doctrine_Core::getTable('Attachments')
                  ->createQuery()
                  ->addWhere('bind_id=?',$comment->getId())
                  ->addWhere('bind_type=?','ticketsComments')
                  ->orderBy('id')
                  ->fetchArray(); 
                  
    foreach ($attachments as $v)
    {
      $attachments_array[] = sfConfig::get('sf_upload_dir') . '/attachments/' . $v['file'];
    }  
    
    //print_r($attachments_array);
    //exit();
                        
    Users::sendEmail($from,$to,$subject,$body,$sf_user,false,false,$attachments_array);
  }
  
  public static function sendNotification($c,$comment,$sf_user)
  {
    $user = $sf_user->getAttribute('user');
    
    $from = array($user->getEmail() => $user->getName());
    
    $to = array();
    
    if(sfConfig::get('app_notify_all_tickets')=='on')
    {
      $users_list = Projects::getTeamUsersByAccess($comment->getTickets()->getProjectsId(),'tickets');
      
      foreach($users_list as $v)
      {
        if($u = Doctrine_Core::getTable('Users')->find($v))
        {        
          $to[$u->getEmail()]=$u->getName();        
        }
      }                 
    }
    else
    {    
      $to[$user->getEmail()] = $user->getName();
      
      if($departments = Doctrine_Core::getTable('Departments')->find($comment->getTickets()->getDepartmentsId()))
      {
        $to[$departments->getUsers()->getEmail()]=$departments->getUsers()->getName();
      }
            
      $to[$comment->getTickets()->getUsers()->getEmail()] = $comment->getTickets()->getUsers()->getName();
    }
                            
    $tickets_comments = Doctrine_Core::getTable('TicketsComments')
      ->createQuery()
      ->addWhere('tickets_id=?',$comment->getTicketsId())
      ->addWhere('in_trash is null')
      ->orderBy('created_at desc')
      ->execute();
      
    foreach($tickets_comments as $v)
    {      
      $to[$v->getUsers()->getEmail()]=$v->getUsers()->getName();      
    }
    
    if(sfConfig::get('app_send_email_to_owner')=='off')
    {
      unset($to[$user->getEmail()]);             
    }
             
    $subject = t::__('New Ticket Comment') . ': ' . $comment->getTickets()->getProjects()->getName() . ' - ' . $comment->getTickets()->getName() . ($comment->getTickets()->getTicketsStatusId()>0 ? ' [' . $comment->getTickets()->getTicketsStatus()->getName() . ']':'');
    $body  = $c->getComponent('ticketsComments','emailBody',array('tickets'=>$comment->getTickets()));
                
    Users::sendEmail($from,$to,$subject,$body,$sf_user);
  }
}